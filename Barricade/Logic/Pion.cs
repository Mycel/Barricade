//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Barricade.Logic
{
	using Process;
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class Pion
	{
	    public Pion(Speler speler)
	    {
	        Speler = speler;
	    }

	    public virtual IVeld IVeld
		{
			get;
			set;
		}

		public virtual Speler Speler
		{
			get; private set;
		}

		public virtual List<IVeld> MogelijkeZetten(int stappen = 1)
		{
            return MogelijkeZetten(IVeld, IVeld, stappen);
		}

        private List<IVeld> MogelijkeZetten(IVeld vorige, IVeld begin, int stappen)
        {
            var list = new List<IVeld>();
            foreach (var veld in begin.Buren)
            {
                if (veld == vorige) continue;

                if (stappen >= 1)
                {
                    if (veld is Veld && (veld as Veld).Barricade != null) continue;
                    list.AddRange(MogelijkeZetten(begin, veld, stappen - 1));
                }
                else
                {
                    // mag niet terug naar startveld
                    if (veld is Startveld) continue;
                    // bezette rustvelden worden oververslagen
                    if (veld is Rustveld && veld.Pionnen.Count > 0) continue;
                    // wanneer het veld geen bos is, maar wel een speler opstaat
                    if (!(veld is Bos) && veld.Pionnen.Count > 0 && veld.Pionnen.First().Speler == Speler) continue;

                    list.Add(veld);
                }
            }
            return list;
        }

	    public virtual bool Verplaats(IVeld bestemming)
		{
			throw new System.NotImplementedException();
		}

	}
}

